{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","NONE","sort","good1","good2","LENGTH","length","ALPABET","localeCompare","reverse","App","state","handleSortTypeUpdate","setState","handleReset","handleReverse","this","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGM,IADTC,EACQ,EADRA,SAAUC,EACF,EADEA,WAENC,EAAY,YAAOH,GAmBzB,OAjBIC,IAAaJ,EAASO,MACxBD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQN,GACN,KAAKJ,EAASW,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAC9B,KAAKZ,EAASa,QACZ,OAAOJ,EAAMK,cAAcJ,GAC7B,QACE,OAAO,MAKXL,GACFC,EAAaS,UAGRT,G,SAlCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA4CE,IAAMgB,EAAb,4MACEC,MAAQ,CACNZ,YAAY,EACZD,SAAUJ,EAASO,MAHvB,EAMEW,qBAAuB,SAACd,GACtB,EAAKe,SAAS,CAAEf,cAPpB,EAUEgB,YAAc,WACZ,EAAKD,SAAS,CAAEf,SAAUJ,EAASO,KAAMF,YAAY,KAXzD,EAcEgB,cAAgB,WACd,EAAKF,UAAS,SAAAF,GAAK,MAAK,CACtBZ,YAAaY,EAAMZ,gBAhBzB,4CAoBE,WAAU,IAAD,OACP,EAAiCiB,KAAKL,MAA9Bb,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYrB,IAAaJ,EAASa,UAEtCa,QAAS,kBAAM,EAAKR,qBAAqBlB,EAASa,UAPpD,iCAYA,wBACEW,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYrB,IAAaJ,EAASW,SAEtCe,QAAS,kBAAM,EAAKR,qBAAqBlB,EAASW,SAPpD,4BAYA,wBACEa,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAA2B,IAAfpB,IAEhBqB,QAASJ,KAAKD,cAPhB,sBAYEjB,GAAYC,IACZ,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKF,YAHhB,sBAWJ,6BACGlB,EAAkBD,EAAiBqB,KAAKL,OAAOU,KAAI,SAAAC,GAAI,OACtD,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eA5EpC,GAAyBC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.976f57f9.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n): string[] {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n        case SortType.ALPABET:\n          return good1.localeCompare(good2);\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype Props = {};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortTypeUpdate = (sortType: number) => {\n    this.setState({ sortType });\n  };\n\n  handleReset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )}\n            onClick={() => this.handleSortTypeUpdate(SortType.ALPABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.handleSortTypeUpdate(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': isReversed !== true },\n            )}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state).map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}